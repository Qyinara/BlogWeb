@using X.PagedList;
@using X.Web.PagedList;
@model BlogWeb.MVCUI.Models.PagedUserViewModel

<h2>Users</h2>


<form method="get" action="@Url.Action("Users", "Admin")">
    <div class="row mb-3">
        <div class="col-md-4">
            <input type="text" name="searchQuery" value="@ViewBag.SearchQuery" class="form-control" placeholder="Search by username or email..." />
        </div>
        <div class="col-md-4 d-flex align-items-center">
            <input type="checkbox" name="roleFilterAdmin" value="Admin" @(ViewBag.RoleFilter == "Admin" ? "checked" : "") class="me-2" /> Admin
            <input type="checkbox" name="roleFilterUser" value="User" @(ViewBag.RoleFilter == "User" ? "checked" : "") class="ms-3 me-2" /> User
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>UserName</th>
            <th>Email</th>
            <th>Profile Photo</th>
            <th>Role</th>
            <th>Create Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Mail</td>
                <td>
                    @if (!string.IsNullOrEmpty(user.ProfilePhotoUrl))
                    {
                        <img src="~/images/profilephoto/@user.ProfilePhotoUrl" alt="Profile Photo" width="50" height="50" class="rounded-circle" />
                    }
                    else
                    {
                        <img src="~/images/profilephoto/default.png" alt="Default Profile Photo" width="50" height="50" class="rounded-circle" />
                    }
                </td>
                <td>@user.Role</td>
                <td>@user.CreateDate.ToString("MMMM dd, yyyy")</td>
                <td>
                    <a href="@Url.Action("UpdateUser", "Admin", new { id = user.Id })" class="btn btn-primary">Edit</a>
                    <form asp-action="DeleteUser" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@user.Id" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center my-4">
    @Html.PagedListPager(Model.Users, page => Url.Action("Users", new { page, searchQuery = ViewBag.SearchQuery, roleFilter = ViewBag.RoleFilter }))
</div>
